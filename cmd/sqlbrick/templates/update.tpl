// {{ .FuncName }} {{ if eq .Comment "" }}generated by sqlbrick, update data in database.{{ else }}{{ .Comment }}{{end}}
func (b *{{ .BrickName }}Brick){{ .FuncName }}(args *{{ .BrickName }}) (sql.Result, error) {
    {{ $length := len .Conditions }}{{ if gt $length 0 }}var conditionQuery string
    {{ $conditions := .Conditions }}{{ $remove := .RemoveComma }}{{ range $k, $v := .Segments }}
    {{ if and $remove (ge $k $length) }}
    if strings.HasSuffix(conditionQuery, ", ") {
        conditionQuery = strings.TrimSuffix(conditionQuery, ", ") + " "
    }
    {{ end }}conditionQuery += `{{ $v }} `{{ if lt $k $length }}{{ $con := index $conditions $k}}
    if args.{{ $con.Expression }} {
        conditionQuery += `{{ $con.Query }}`
    }{{ end }}{{ end }}
    stmt, err := b.db.PrepareNamed(conditionQuery)
    {{ else }}stmt, err := b.db.PrepareNamed(
        `{{ index .Segments 0 }}`){{ end }}
    if err != nil {
        return nil, err
    }
    return stmt.Exec(args)
}
